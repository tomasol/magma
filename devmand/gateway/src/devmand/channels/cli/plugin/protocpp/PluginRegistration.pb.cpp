// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PluginRegistration.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#ifdef INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#endif
#include "PluginRegistration.pb.h"

#include <algorithm>

#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace devmand {
namespace channels {
namespace cli {
namespace plugin {

namespace {

const ::google::protobuf::Descriptor* CapabilitiesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    CapabilitiesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReaderCapability_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    ReaderCapability_reflection_ = NULL;
const ::google::protobuf::Descriptor* WriterCapability_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    WriterCapability_reflection_ = NULL;
const ::google::protobuf::Descriptor* CapabilitiesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    CapabilitiesResponse_reflection_ = NULL;

} // namespace

void protobuf_AssignDesc_PluginRegistration_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PluginRegistration_2eproto() {
  protobuf_AddDesc_PluginRegistration_2eproto();
  const ::google::protobuf::FileDescriptor* file =
      ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
          "PluginRegistration.proto");
  GOOGLE_CHECK(file != NULL);
  CapabilitiesRequest_descriptor_ = file->message_type(0);
  static const int CapabilitiesRequest_offsets_[1] = {};
  CapabilitiesRequest_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          CapabilitiesRequest_descriptor_,
          CapabilitiesRequest::default_instance_,
          CapabilitiesRequest_offsets_,
          -1,
          -1,
          -1,
          sizeof(CapabilitiesRequest),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              CapabilitiesRequest, _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              CapabilitiesRequest, _is_default_instance_));
  ReaderCapability_descriptor_ = file->message_type(1);
  static const int ReaderCapability_offsets_[2] = {
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReaderCapability, path_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
          ReaderCapability, subtree_),
  };
  ReaderCapability_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          ReaderCapability_descriptor_,
          ReaderCapability::default_instance_,
          ReaderCapability_offsets_,
          -1,
          -1,
          -1,
          sizeof(ReaderCapability),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              ReaderCapability, _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              ReaderCapability, _is_default_instance_));
  WriterCapability_descriptor_ = file->message_type(2);
  static const int WriterCapability_offsets_[2] = {
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriterCapability, path_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
          WriterCapability, subtree_),
  };
  WriterCapability_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          WriterCapability_descriptor_,
          WriterCapability::default_instance_,
          WriterCapability_offsets_,
          -1,
          -1,
          -1,
          sizeof(WriterCapability),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              WriterCapability, _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              WriterCapability, _is_default_instance_));
  CapabilitiesResponse_descriptor_ = file->message_type(3);
  static const int CapabilitiesResponse_offsets_[2] = {
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
          CapabilitiesResponse, readercapabilities_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
          CapabilitiesResponse, writercapabilities_),
  };
  CapabilitiesResponse_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          CapabilitiesResponse_descriptor_,
          CapabilitiesResponse::default_instance_,
          CapabilitiesResponse_offsets_,
          -1,
          -1,
          -1,
          sizeof(CapabilitiesResponse),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              CapabilitiesResponse, _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              CapabilitiesResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(
      &protobuf_AssignDescriptors_once_,
      &protobuf_AssignDesc_PluginRegistration_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CapabilitiesRequest_descriptor_,
      &CapabilitiesRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReaderCapability_descriptor_, &ReaderCapability::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriterCapability_descriptor_, &WriterCapability::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CapabilitiesResponse_descriptor_,
      &CapabilitiesResponse::default_instance());
}

} // namespace

void protobuf_ShutdownFile_PluginRegistration_2eproto() {
  delete CapabilitiesRequest::default_instance_;
  delete CapabilitiesRequest_reflection_;
  delete ReaderCapability::default_instance_;
  delete ReaderCapability_reflection_;
  delete WriterCapability::default_instance_;
  delete WriterCapability_reflection_;
  delete CapabilitiesResponse::default_instance_;
  delete CapabilitiesResponse_reflection_;
}

void protobuf_AddDesc_PluginRegistration_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_PluginRegistration_2eproto() {
  static bool already_here = false;
  if (already_here)
    return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      "\n\030PluginRegistration.proto\022\033devmand.chan"
      "nels.cli.plugin\"\025\n\023CapabilitiesRequest\"1"
      "\n\020ReaderCapability\022\014\n\004path\030\001 \001(\t\022\017\n\007subt"
      "ree\030\002 \001(\010\"1\n\020WriterCapability\022\014\n\004path\030\001 "
      "\001(\t\022\017\n\007subtree\030\002 \001(\010\"\254\001\n\024CapabilitiesRes"
      "ponse\022I\n\022readerCapabilities\030\001 \003(\0132-.devm"
      "and.channels.cli.plugin.ReaderCapability"
      "\022I\n\022writerCapabilities\030\002 \003(\0132-.devmand.c"
      "hannels.cli.plugin.WriterCapability2\216\001\n\022"
      "PluginRegistration\022x\n\017GetCapabilities\0220."
      "devmand.channels.cli.plugin.Capabilities"
      "Request\0321.devmand.channels.cli.plugin.Ca"
      "pabilitiesResponse\"\000b\006proto3",
      508);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
      "PluginRegistration.proto", &protobuf_RegisterTypes);
  CapabilitiesRequest::default_instance_ = new CapabilitiesRequest();
  ReaderCapability::default_instance_ = new ReaderCapability();
  WriterCapability::default_instance_ = new WriterCapability();
  CapabilitiesResponse::default_instance_ = new CapabilitiesResponse();
  CapabilitiesRequest::default_instance_->InitAsDefaultInstance();
  ReaderCapability::default_instance_->InitAsDefaultInstance();
  WriterCapability::default_instance_->InitAsDefaultInstance();
  CapabilitiesResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(
      &protobuf_ShutdownFile_PluginRegistration_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PluginRegistration_2eproto {
  StaticDescriptorInitializer_PluginRegistration_2eproto() {
    protobuf_AddDesc_PluginRegistration_2eproto();
  }
} static_descriptor_initializer_PluginRegistration_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

CapabilitiesRequest::CapabilitiesRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:devmand.channels.cli.plugin.CapabilitiesRequest)
}

void CapabilitiesRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CapabilitiesRequest::CapabilitiesRequest(const CapabilitiesRequest& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:devmand.channels.cli.plugin.CapabilitiesRequest)
}

void CapabilitiesRequest::SharedCtor() {
  _is_default_instance_ = false;
  _cached_size_ = 0;
}

CapabilitiesRequest::~CapabilitiesRequest() {
  // @@protoc_insertion_point(destructor:devmand.channels.cli.plugin.CapabilitiesRequest)
  SharedDtor();
}

void CapabilitiesRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CapabilitiesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CapabilitiesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CapabilitiesRequest_descriptor_;
}

const CapabilitiesRequest& CapabilitiesRequest::default_instance() {
  if (default_instance_ == NULL)
    protobuf_AddDesc_PluginRegistration_2eproto();
  return *default_instance_;
}

CapabilitiesRequest* CapabilitiesRequest::default_instance_ = NULL;

CapabilitiesRequest* CapabilitiesRequest::New(
    ::google::protobuf::Arena* arena) const {
  CapabilitiesRequest* n = new CapabilitiesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CapabilitiesRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:devmand.channels.cli.plugin.CapabilitiesRequest)
}

bool CapabilitiesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                 \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:devmand.channels.cli.plugin.CapabilitiesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:devmand.channels.cli.plugin.CapabilitiesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:devmand.channels.cli.plugin.CapabilitiesRequest)
  return false;
#undef DO_
}

void CapabilitiesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  (void)output;
  // @@protoc_insertion_point(serialize_start:devmand.channels.cli.plugin.CapabilitiesRequest)
  // @@protoc_insertion_point(serialize_end:devmand.channels.cli.plugin.CapabilitiesRequest)
}

::google::protobuf::uint8*
CapabilitiesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic,
    ::google::protobuf::uint8* target) const {
  (void)deterministic;
  // @@protoc_insertion_point(serialize_to_array_start:devmand.channels.cli.plugin.CapabilitiesRequest)
  // @@protoc_insertion_point(serialize_to_array_end:devmand.channels.cli.plugin.CapabilitiesRequest)
  return target;
}

int CapabilitiesRequest::ByteSize() const {
  // @@protoc_insertion_point(message_byte_size_start:devmand.channels.cli.plugin.CapabilitiesRequest)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CapabilitiesRequest::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:devmand.channels.cli.plugin.CapabilitiesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CapabilitiesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const CapabilitiesRequest>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:devmand.channels.cli.plugin.CapabilitiesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:devmand.channels.cli.plugin.CapabilitiesRequest)
    MergeFrom(*source);
  }
}

void CapabilitiesRequest::MergeFrom(const CapabilitiesRequest& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:devmand.channels.cli.plugin.CapabilitiesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void CapabilitiesRequest::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:devmand.channels.cli.plugin.CapabilitiesRequest)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void CapabilitiesRequest::CopyFrom(const CapabilitiesRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:devmand.channels.cli.plugin.CapabilitiesRequest)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool CapabilitiesRequest::IsInitialized() const {
  return true;
}

void CapabilitiesRequest::Swap(CapabilitiesRequest* other) {
  if (other == this)
    return;
  InternalSwap(other);
}
void CapabilitiesRequest::InternalSwap(CapabilitiesRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CapabilitiesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CapabilitiesRequest_descriptor_;
  metadata.reflection = CapabilitiesRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CapabilitiesRequest

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReaderCapability::kPathFieldNumber;
const int ReaderCapability::kSubtreeFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

ReaderCapability::ReaderCapability()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:devmand.channels.cli.plugin.ReaderCapability)
}

void ReaderCapability::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReaderCapability::ReaderCapability(const ReaderCapability& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:devmand.channels.cli.plugin.ReaderCapability)
}

void ReaderCapability::SharedCtor() {
  _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtree_ = false;
}

ReaderCapability::~ReaderCapability() {
  // @@protoc_insertion_point(destructor:devmand.channels.cli.plugin.ReaderCapability)
  SharedDtor();
}

void ReaderCapability::SharedDtor() {
  path_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReaderCapability::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReaderCapability::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReaderCapability_descriptor_;
}

const ReaderCapability& ReaderCapability::default_instance() {
  if (default_instance_ == NULL)
    protobuf_AddDesc_PluginRegistration_2eproto();
  return *default_instance_;
}

ReaderCapability* ReaderCapability::default_instance_ = NULL;

ReaderCapability* ReaderCapability::New(
    ::google::protobuf::Arena* arena) const {
  ReaderCapability* n = new ReaderCapability;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReaderCapability::Clear() {
  // @@protoc_insertion_point(message_clear_start:devmand.channels.cli.plugin.ReaderCapability)
  path_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtree_ = false;
}

bool ReaderCapability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                 \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:devmand.channels.cli.plugin.ReaderCapability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
              this->path().data(),
              (int)this->path().length(),
              ::google::protobuf::internal::WireFormatLite::PARSE,
              "devmand.channels.cli.plugin.ReaderCapability.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16))
          goto parse_subtree;
        break;
      }

      // optional bool subtree = 2;
      case 2: {
        if (tag == 16) {
        parse_subtree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               bool,
               ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
              input, &subtree_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd())
          goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                ::google::protobuf::internal::WireFormatLite::
                    WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:devmand.channels.cli.plugin.ReaderCapability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:devmand.channels.cli.plugin.ReaderCapability)
  return false;
#undef DO_
}

void ReaderCapability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  (void)output;
  // @@protoc_insertion_point(serialize_start:devmand.channels.cli.plugin.ReaderCapability)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        this->path().data(),
        (int)this->path().length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "devmand.channels.cli.plugin.ReaderCapability.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        1, this->path(), output);
  }

  // optional bool subtree = 2;
  if (this->subtree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
        2, this->subtree(), output);
  }

  // @@protoc_insertion_point(serialize_end:devmand.channels.cli.plugin.ReaderCapability)
}

::google::protobuf::uint8*
ReaderCapability::InternalSerializeWithCachedSizesToArray(
    bool deterministic,
    ::google::protobuf::uint8* target) const {
  (void)deterministic;
  // @@protoc_insertion_point(serialize_to_array_start:devmand.channels.cli.plugin.ReaderCapability)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        this->path().data(),
        (int)this->path().length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "devmand.channels.cli.plugin.ReaderCapability.path");
    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional bool subtree = 2;
  if (this->subtree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(
        2, this->subtree(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:devmand.channels.cli.plugin.ReaderCapability)
  return target;
}

int ReaderCapability::ByteSize() const {
  // @@protoc_insertion_point(message_byte_size_start:devmand.channels.cli.plugin.ReaderCapability)
  int total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(this->path());
  }

  // optional bool subtree = 2;
  if (this->subtree() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReaderCapability::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:devmand.channels.cli.plugin.ReaderCapability)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReaderCapability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const ReaderCapability>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:devmand.channels.cli.plugin.ReaderCapability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:devmand.channels.cli.plugin.ReaderCapability)
    MergeFrom(*source);
  }
}

void ReaderCapability::MergeFrom(const ReaderCapability& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:devmand.channels.cli.plugin.ReaderCapability)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.path().size() > 0) {
    path_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.path_);
  }
  if (from.subtree() != 0) {
    set_subtree(from.subtree());
  }
}

void ReaderCapability::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:devmand.channels.cli.plugin.ReaderCapability)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void ReaderCapability::CopyFrom(const ReaderCapability& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:devmand.channels.cli.plugin.ReaderCapability)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool ReaderCapability::IsInitialized() const {
  return true;
}

void ReaderCapability::Swap(ReaderCapability* other) {
  if (other == this)
    return;
  InternalSwap(other);
}
void ReaderCapability::InternalSwap(ReaderCapability* other) {
  path_.Swap(&other->path_);
  std::swap(subtree_, other->subtree_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReaderCapability::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReaderCapability_descriptor_;
  metadata.reflection = ReaderCapability_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReaderCapability

// optional string path = 1;
void ReaderCapability::clear_path() {
  path_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReaderCapability::path() const {
  // @@protoc_insertion_point(field_get:devmand.channels.cli.plugin.ReaderCapability.path)
  return path_.GetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReaderCapability::set_path(const ::std::string& value) {
  path_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:devmand.channels.cli.plugin.ReaderCapability.path)
}
void ReaderCapability::set_path(const char* value) {
  path_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:devmand.channels.cli.plugin.ReaderCapability.path)
}
void ReaderCapability::set_path(const char* value, size_t size) {
  path_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:devmand.channels.cli.plugin.ReaderCapability.path)
}
::std::string* ReaderCapability::mutable_path() {
  // @@protoc_insertion_point(field_mutable:devmand.channels.cli.plugin.ReaderCapability.path)
  return path_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReaderCapability::release_path() {
  // @@protoc_insertion_point(field_release:devmand.channels.cli.plugin.ReaderCapability.path)

  return path_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReaderCapability::set_allocated_path(::std::string* path) {
  if (path != NULL) {
  } else {
  }
  path_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:devmand.channels.cli.plugin.ReaderCapability.path)
}

// optional bool subtree = 2;
void ReaderCapability::clear_subtree() {
  subtree_ = false;
}
bool ReaderCapability::subtree() const {
  // @@protoc_insertion_point(field_get:devmand.channels.cli.plugin.ReaderCapability.subtree)
  return subtree_;
}
void ReaderCapability::set_subtree(bool value) {
  subtree_ = value;
  // @@protoc_insertion_point(field_set:devmand.channels.cli.plugin.ReaderCapability.subtree)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriterCapability::kPathFieldNumber;
const int WriterCapability::kSubtreeFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

WriterCapability::WriterCapability()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:devmand.channels.cli.plugin.WriterCapability)
}

void WriterCapability::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

WriterCapability::WriterCapability(const WriterCapability& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:devmand.channels.cli.plugin.WriterCapability)
}

void WriterCapability::SharedCtor() {
  _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtree_ = false;
}

WriterCapability::~WriterCapability() {
  // @@protoc_insertion_point(destructor:devmand.channels.cli.plugin.WriterCapability)
  SharedDtor();
}

void WriterCapability::SharedDtor() {
  path_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void WriterCapability::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriterCapability::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriterCapability_descriptor_;
}

const WriterCapability& WriterCapability::default_instance() {
  if (default_instance_ == NULL)
    protobuf_AddDesc_PluginRegistration_2eproto();
  return *default_instance_;
}

WriterCapability* WriterCapability::default_instance_ = NULL;

WriterCapability* WriterCapability::New(
    ::google::protobuf::Arena* arena) const {
  WriterCapability* n = new WriterCapability;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriterCapability::Clear() {
  // @@protoc_insertion_point(message_clear_start:devmand.channels.cli.plugin.WriterCapability)
  path_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtree_ = false;
}

bool WriterCapability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                 \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:devmand.channels.cli.plugin.WriterCapability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
              this->path().data(),
              (int)this->path().length(),
              ::google::protobuf::internal::WireFormatLite::PARSE,
              "devmand.channels.cli.plugin.WriterCapability.path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16))
          goto parse_subtree;
        break;
      }

      // optional bool subtree = 2;
      case 2: {
        if (tag == 16) {
        parse_subtree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               bool,
               ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
              input, &subtree_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd())
          goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                ::google::protobuf::internal::WireFormatLite::
                    WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:devmand.channels.cli.plugin.WriterCapability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:devmand.channels.cli.plugin.WriterCapability)
  return false;
#undef DO_
}

void WriterCapability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  (void)output;
  // @@protoc_insertion_point(serialize_start:devmand.channels.cli.plugin.WriterCapability)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        this->path().data(),
        (int)this->path().length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "devmand.channels.cli.plugin.WriterCapability.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        1, this->path(), output);
  }

  // optional bool subtree = 2;
  if (this->subtree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
        2, this->subtree(), output);
  }

  // @@protoc_insertion_point(serialize_end:devmand.channels.cli.plugin.WriterCapability)
}

::google::protobuf::uint8*
WriterCapability::InternalSerializeWithCachedSizesToArray(
    bool deterministic,
    ::google::protobuf::uint8* target) const {
  (void)deterministic;
  // @@protoc_insertion_point(serialize_to_array_start:devmand.channels.cli.plugin.WriterCapability)
  // optional string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        this->path().data(),
        (int)this->path().length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "devmand.channels.cli.plugin.WriterCapability.path");
    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional bool subtree = 2;
  if (this->subtree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(
        2, this->subtree(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:devmand.channels.cli.plugin.WriterCapability)
  return target;
}

int WriterCapability::ByteSize() const {
  // @@protoc_insertion_point(message_byte_size_start:devmand.channels.cli.plugin.WriterCapability)
  int total_size = 0;

  // optional string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(this->path());
  }

  // optional bool subtree = 2;
  if (this->subtree() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriterCapability::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:devmand.channels.cli.plugin.WriterCapability)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WriterCapability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const WriterCapability>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:devmand.channels.cli.plugin.WriterCapability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:devmand.channels.cli.plugin.WriterCapability)
    MergeFrom(*source);
  }
}

void WriterCapability::MergeFrom(const WriterCapability& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:devmand.channels.cli.plugin.WriterCapability)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.path().size() > 0) {
    path_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.path_);
  }
  if (from.subtree() != 0) {
    set_subtree(from.subtree());
  }
}

void WriterCapability::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:devmand.channels.cli.plugin.WriterCapability)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void WriterCapability::CopyFrom(const WriterCapability& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:devmand.channels.cli.plugin.WriterCapability)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool WriterCapability::IsInitialized() const {
  return true;
}

void WriterCapability::Swap(WriterCapability* other) {
  if (other == this)
    return;
  InternalSwap(other);
}
void WriterCapability::InternalSwap(WriterCapability* other) {
  path_.Swap(&other->path_);
  std::swap(subtree_, other->subtree_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriterCapability::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriterCapability_descriptor_;
  metadata.reflection = WriterCapability_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriterCapability

// optional string path = 1;
void WriterCapability::clear_path() {
  path_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WriterCapability::path() const {
  // @@protoc_insertion_point(field_get:devmand.channels.cli.plugin.WriterCapability.path)
  return path_.GetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriterCapability::set_path(const ::std::string& value) {
  path_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:devmand.channels.cli.plugin.WriterCapability.path)
}
void WriterCapability::set_path(const char* value) {
  path_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:devmand.channels.cli.plugin.WriterCapability.path)
}
void WriterCapability::set_path(const char* value, size_t size) {
  path_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:devmand.channels.cli.plugin.WriterCapability.path)
}
::std::string* WriterCapability::mutable_path() {
  // @@protoc_insertion_point(field_mutable:devmand.channels.cli.plugin.WriterCapability.path)
  return path_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WriterCapability::release_path() {
  // @@protoc_insertion_point(field_release:devmand.channels.cli.plugin.WriterCapability.path)

  return path_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriterCapability::set_allocated_path(::std::string* path) {
  if (path != NULL) {
  } else {
  }
  path_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:devmand.channels.cli.plugin.WriterCapability.path)
}

// optional bool subtree = 2;
void WriterCapability::clear_subtree() {
  subtree_ = false;
}
bool WriterCapability::subtree() const {
  // @@protoc_insertion_point(field_get:devmand.channels.cli.plugin.WriterCapability.subtree)
  return subtree_;
}
void WriterCapability::set_subtree(bool value) {
  subtree_ = value;
  // @@protoc_insertion_point(field_set:devmand.channels.cli.plugin.WriterCapability.subtree)
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CapabilitiesResponse::kReaderCapabilitiesFieldNumber;
const int CapabilitiesResponse::kWriterCapabilitiesFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

CapabilitiesResponse::CapabilitiesResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:devmand.channels.cli.plugin.CapabilitiesResponse)
}

void CapabilitiesResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CapabilitiesResponse::CapabilitiesResponse(const CapabilitiesResponse& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:devmand.channels.cli.plugin.CapabilitiesResponse)
}

void CapabilitiesResponse::SharedCtor() {
  _is_default_instance_ = false;
  _cached_size_ = 0;
}

CapabilitiesResponse::~CapabilitiesResponse() {
  // @@protoc_insertion_point(destructor:devmand.channels.cli.plugin.CapabilitiesResponse)
  SharedDtor();
}

void CapabilitiesResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CapabilitiesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CapabilitiesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CapabilitiesResponse_descriptor_;
}

const CapabilitiesResponse& CapabilitiesResponse::default_instance() {
  if (default_instance_ == NULL)
    protobuf_AddDesc_PluginRegistration_2eproto();
  return *default_instance_;
}

CapabilitiesResponse* CapabilitiesResponse::default_instance_ = NULL;

CapabilitiesResponse* CapabilitiesResponse::New(
    ::google::protobuf::Arena* arena) const {
  CapabilitiesResponse* n = new CapabilitiesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CapabilitiesResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:devmand.channels.cli.plugin.CapabilitiesResponse)
  readercapabilities_.Clear();
  writercapabilities_.Clear();
}

bool CapabilitiesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION)                 \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:devmand.channels.cli.plugin.CapabilitiesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .devmand.channels.cli.plugin.ReaderCapability
      // readerCapabilities = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
        parse_loop_readerCapabilities:
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtualNoRecursionDepth(
                      input, add_readercapabilities()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10))
          goto parse_loop_readerCapabilities;
        if (input->ExpectTag(18))
          goto parse_loop_writerCapabilities;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .devmand.channels.cli.plugin.WriterCapability
      // writerCapabilities = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
        parse_loop_writerCapabilities:
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtualNoRecursionDepth(
                      input, add_writercapabilities()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18))
          goto parse_loop_writerCapabilities;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd())
          goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                ::google::protobuf::internal::WireFormatLite::
                    WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:devmand.channels.cli.plugin.CapabilitiesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:devmand.channels.cli.plugin.CapabilitiesResponse)
  return false;
#undef DO_
}

void CapabilitiesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  (void)output;
  // @@protoc_insertion_point(serialize_start:devmand.channels.cli.plugin.CapabilitiesResponse)
  // repeated .devmand.channels.cli.plugin.ReaderCapability readerCapabilities =
  // 1;
  for (int i = 0, n = this->readercapabilities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->readercapabilities(i), output);
  }

  // repeated .devmand.channels.cli.plugin.WriterCapability writerCapabilities =
  // 2;
  for (int i = 0, n = this->writercapabilities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->writercapabilities(i), output);
  }

  // @@protoc_insertion_point(serialize_end:devmand.channels.cli.plugin.CapabilitiesResponse)
}

::google::protobuf::uint8*
CapabilitiesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic,
    ::google::protobuf::uint8* target) const {
  (void)deterministic;
  // @@protoc_insertion_point(serialize_to_array_start:devmand.channels.cli.plugin.CapabilitiesResponse)
  // repeated .devmand.channels.cli.plugin.ReaderCapability readerCapabilities =
  // 1;
  for (int i = 0, n = this->readercapabilities_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
            1, this->readercapabilities(i), false, target);
  }

  // repeated .devmand.channels.cli.plugin.WriterCapability writerCapabilities =
  // 2;
  for (int i = 0, n = this->writercapabilities_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
            2, this->writercapabilities(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:devmand.channels.cli.plugin.CapabilitiesResponse)
  return target;
}

int CapabilitiesResponse::ByteSize() const {
  // @@protoc_insertion_point(message_byte_size_start:devmand.channels.cli.plugin.CapabilitiesResponse)
  int total_size = 0;

  // repeated .devmand.channels.cli.plugin.ReaderCapability readerCapabilities =
  // 1;
  total_size += 1 * this->readercapabilities_size();
  for (int i = 0; i < this->readercapabilities_size(); i++) {
    total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
            this->readercapabilities(i));
  }

  // repeated .devmand.channels.cli.plugin.WriterCapability writerCapabilities =
  // 2;
  total_size += 1 * this->writercapabilities_size();
  for (int i = 0; i < this->writercapabilities_size(); i++) {
    total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
            this->writercapabilities(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CapabilitiesResponse::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:devmand.channels.cli.plugin.CapabilitiesResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CapabilitiesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const CapabilitiesResponse>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:devmand.channels.cli.plugin.CapabilitiesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:devmand.channels.cli.plugin.CapabilitiesResponse)
    MergeFrom(*source);
  }
}

void CapabilitiesResponse::MergeFrom(const CapabilitiesResponse& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:devmand.channels.cli.plugin.CapabilitiesResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  readercapabilities_.MergeFrom(from.readercapabilities_);
  writercapabilities_.MergeFrom(from.writercapabilities_);
}

void CapabilitiesResponse::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:devmand.channels.cli.plugin.CapabilitiesResponse)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void CapabilitiesResponse::CopyFrom(const CapabilitiesResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:devmand.channels.cli.plugin.CapabilitiesResponse)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool CapabilitiesResponse::IsInitialized() const {
  return true;
}

void CapabilitiesResponse::Swap(CapabilitiesResponse* other) {
  if (other == this)
    return;
  InternalSwap(other);
}
void CapabilitiesResponse::InternalSwap(CapabilitiesResponse* other) {
  readercapabilities_.UnsafeArenaSwap(&other->readercapabilities_);
  writercapabilities_.UnsafeArenaSwap(&other->writercapabilities_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CapabilitiesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CapabilitiesResponse_descriptor_;
  metadata.reflection = CapabilitiesResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CapabilitiesResponse

// repeated .devmand.channels.cli.plugin.ReaderCapability readerCapabilities =
// 1;
int CapabilitiesResponse::readercapabilities_size() const {
  return readercapabilities_.size();
}
void CapabilitiesResponse::clear_readercapabilities() {
  readercapabilities_.Clear();
}
const ::devmand::channels::cli::plugin::ReaderCapability&
CapabilitiesResponse::readercapabilities(int index) const {
  // @@protoc_insertion_point(field_get:devmand.channels.cli.plugin.CapabilitiesResponse.readerCapabilities)
  return readercapabilities_.Get(index);
}
::devmand::channels::cli::plugin::ReaderCapability*
CapabilitiesResponse::mutable_readercapabilities(int index) {
  // @@protoc_insertion_point(field_mutable:devmand.channels.cli.plugin.CapabilitiesResponse.readerCapabilities)
  return readercapabilities_.Mutable(index);
}
::devmand::channels::cli::plugin::ReaderCapability*
CapabilitiesResponse::add_readercapabilities() {
  // @@protoc_insertion_point(field_add:devmand.channels.cli.plugin.CapabilitiesResponse.readerCapabilities)
  return readercapabilities_.Add();
}
::google::protobuf::RepeatedPtrField<
    ::devmand::channels::cli::plugin::ReaderCapability>*
CapabilitiesResponse::mutable_readercapabilities() {
  // @@protoc_insertion_point(field_mutable_list:devmand.channels.cli.plugin.CapabilitiesResponse.readerCapabilities)
  return &readercapabilities_;
}
const ::google::protobuf::RepeatedPtrField<
    ::devmand::channels::cli::plugin::ReaderCapability>&
CapabilitiesResponse::readercapabilities() const {
  // @@protoc_insertion_point(field_list:devmand.channels.cli.plugin.CapabilitiesResponse.readerCapabilities)
  return readercapabilities_;
}

// repeated .devmand.channels.cli.plugin.WriterCapability writerCapabilities =
// 2;
int CapabilitiesResponse::writercapabilities_size() const {
  return writercapabilities_.size();
}
void CapabilitiesResponse::clear_writercapabilities() {
  writercapabilities_.Clear();
}
const ::devmand::channels::cli::plugin::WriterCapability&
CapabilitiesResponse::writercapabilities(int index) const {
  // @@protoc_insertion_point(field_get:devmand.channels.cli.plugin.CapabilitiesResponse.writerCapabilities)
  return writercapabilities_.Get(index);
}
::devmand::channels::cli::plugin::WriterCapability*
CapabilitiesResponse::mutable_writercapabilities(int index) {
  // @@protoc_insertion_point(field_mutable:devmand.channels.cli.plugin.CapabilitiesResponse.writerCapabilities)
  return writercapabilities_.Mutable(index);
}
::devmand::channels::cli::plugin::WriterCapability*
CapabilitiesResponse::add_writercapabilities() {
  // @@protoc_insertion_point(field_add:devmand.channels.cli.plugin.CapabilitiesResponse.writerCapabilities)
  return writercapabilities_.Add();
}
::google::protobuf::RepeatedPtrField<
    ::devmand::channels::cli::plugin::WriterCapability>*
CapabilitiesResponse::mutable_writercapabilities() {
  // @@protoc_insertion_point(field_mutable_list:devmand.channels.cli.plugin.CapabilitiesResponse.writerCapabilities)
  return &writercapabilities_;
}
const ::google::protobuf::RepeatedPtrField<
    ::devmand::channels::cli::plugin::WriterCapability>&
CapabilitiesResponse::writercapabilities() const {
  // @@protoc_insertion_point(field_list:devmand.channels.cli.plugin.CapabilitiesResponse.writerCapabilities)
  return writercapabilities_;
}

#endif // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

} // namespace plugin
} // namespace cli
} // namespace channels
} // namespace devmand

// @@protoc_insertion_point(global_scope)
